import React, { useEffect, useMemo, useState } from 'react';
import Header from '../../../components/Header/Header';
import API_BASE_URL from '../../../config';
import './admin.css';

/* ---------------- Mini BarChart (no lib) ---------------- */
function SimpleBarChart({ data = [], height = 220, yLabel = 'L∆∞·ª£t ƒë·ªïi' }) {
  const max = useMemo(() => Math.max(1, ...data.map(d => d.value || 0)), [data]);
  return (
    <div style={{ width: '100%' }}>
      <div style={{ fontSize: 12, color: '#64748b', marginBottom: 6 }}>{yLabel}</div>
      <div
        style={{
          height,
          display: 'grid',
          gridTemplateColumns: `repeat(${data.length || 1}, 1fr)`,
          gap: 10,
          alignItems: 'end',
          padding: '8px 4px',
          background: '#f7fafc',
          borderRadius: 12,
        }}
      >
        {data.map((d, idx) => {
          const h = Math.round(((d.value || 0) / max) * (height - 50));
          return (
            <div key={idx} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>
              <div
                title={`${d.label}: ${d.value.toLocaleString('vi-VN')}`}
                style={{
                  height: Math.max(6, h),
                  width: '100%',
                  borderRadius: 8,
                  background: '#1976d2',
                  boxShadow: '0 2px 6px rgba(25,118,210,0.24)',
                  transition: 'height .25s ease',
                }}
              />
              <div style={{ fontSize: 12, color: '#0f172a', marginTop: 6, textAlign: 'center', wordBreak: 'break-word' }}>
                {d.value.toLocaleString('vi-VN')}
              </div>
              <div style={{ fontSize: 12, color: '#64748b', marginTop: 2, textAlign: 'center', maxWidth: 120 }}>
                {d.label}
              </div>
            </div>
          );
        })}
      </div>
    </div>
  );
}

/* ---------------- Helpers ---------------- */
function normalizeStations(rows = []) {
  return rows.map((r) => {
    const name =
      r.Station_Name || r.station_name || r.stationName || r.Name || r.name || `Tr·∫°m ${r.Station_ID || r.id || ''}`;
    const count = r.swapCount ?? r.total_swaps ?? r.TotalSwaps ?? r.totalSwaps ?? r.swaps ?? r.Swaps ?? r.count ?? 0;
    return { label: String(name), value: Number(count) || 0 };
  });
}

const summaryCards = [
  { label: 'T·ªïng doanh thu th√°ng n√†y', value: '65,000,000 ƒë', sub: '+12% so v·ªõi th√°ng tr∆∞·ªõc', icon: 'üìà' },
  { label: 'T·ªïng s·ªë tr·∫°m', value: '4', sub: '3 ho·∫°t ƒë·ªông, 1 b·∫£o tr√¨', icon: 'üè¢' },
  { label: 'Kh√°ch h√†ng', value: '1,234', sub: '+85 ng∆∞·ªùi d√πng m·ªõi', icon: 'üßë‚Äçü§ù‚Äçüßë' },
  { label: 'L∆∞·ª£t ƒë·ªïi pin', value: '2,600', sub: 'Trung b√¨nh 87/ng√†y', icon: 'üîÑ' },
];

const tabs = [
  { label: 'T·ªïng quan', value: 'overview' },
  { label: 'Qu·∫£n l√Ω tr·∫°m', value: 'station' },
  { label: 'Ng∆∞·ªùi d√πng', value: 'user' },
  { label: 'Ph√¢n t√≠ch', value: 'analytics' },
];

export default function AdminDashboard({ user, onLoginClick }) {
  const [activeTab, setActiveTab] = useState('overview');

  // ---- Chart l∆∞·ª£t ƒë·ªïi pin theo tr·∫°m (API /analyticsSwap) ----
  const [chartLoading, setChartLoading] = useState(false);
  const [chartError, setChartError] = useState('');
  const [chartData, setChartData] = useState([]); // [{label, value}]

  // ---- Chart doanh thu t·ªïng h·ª£p (API /analyticsRevenue) ----
  const [revenueData, setRevenueData] = useState({ stations: [], packages: [], totals: null });
  const [revenueLoading, setRevenueLoading] = useState(false);
  const [revenueError, setRevenueError] = useState('');

  /* ================= fetch /analyticsSwap ================= */
  useEffect(() => {
    if (activeTab !== 'overview') return;

    let aborted = false;
    (async () => {
      try {
        setChartLoading(true);
        setChartError('');

        const token =
          localStorage.getItem('authToken') ||
          localStorage.getItem('jwt_token') ||
          '';

        if (!token) throw new Error('B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p. Vui l√≤ng ƒëƒÉng nh·∫≠p t√†i kho·∫£n Admin.');

        const url = `${API_BASE_URL}/webAPI/api/secure/analyticsSwap`;

        const res = await fetch(url, {
          method: 'GET',
          mode: 'cors',
          credentials: 'include',
          cache: 'no-store',
          headers: {
            Accept: 'application/json',
            Authorization: `Bearer ${token}`,
            'ngrok-skip-browser-warning': '1',
          },
        });

        if (aborted) return;

        if (res.status === 401) throw new Error('401 Unauthorized ‚Äî vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i b·∫±ng t√†i kho·∫£n Admin.');
        if (res.status === 403) throw new Error('403 Forbidden ‚Äî ch·ªâ Admin ƒë∆∞·ª£c ph√©p xem th·ªëng k√™ n√†y.');
        if (!res.ok) throw new Error(`HTTP ${res.status}`);

        const ct = (res.headers.get('content-type') || '').toLowerCase();
        const raw = await res.text();
        if (!ct.includes('application/json')) {
          throw new Error(`Unexpected content-type: ${ct}. Body: ${raw.slice(0, 200)}`);
        }
        const json = JSON.parse(raw);

        if (!json?.success) throw new Error(json?.message || 'Kh√¥ng l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu');

        const rows = Array.isArray(json.stations) ? json.stations : [];
        const normalized = normalizeStations(rows).sort((a, b) => b.value - a.value);
        setChartData(normalized);
      } catch (err) {
        setChartError(err.message || 'L·ªói kh√¥ng x√°c ƒë·ªãnh');
        setChartData([]);
      } finally {
        !aborted && setChartLoading(false);
      }
    })();

    return () => {
      aborted = true;
    };
  }, [activeTab]);

  /* ================= fetch /analyticsRevenue ================= */
  useEffect(() => {
    if (activeTab !== 'overview') return;

    let aborted = false;
    (async () => {
      try {
        setRevenueLoading(true);
        setRevenueError('');

        const token =
          localStorage.getItem('authToken') ||
          localStorage.getItem('jwt_token') ||
          '';

        if (!token) throw new Error('Vui l√≤ng ƒëƒÉng nh·∫≠p Admin.');

        const url = `${API_BASE_URL}/webAPI/api/secure/analyticsRevenue`;
        const res = await fetch(url, {
          method: 'GET',
          credentials: 'include',
          headers: {
            Accept: 'application/json',
            Authorization: `Bearer ${token}`,
            'ngrok-skip-browser-warning': '1',
          },
        });

        if (aborted) return;
        if (res.status === 401) throw new Error('401 Unauthorized');
        if (res.status === 403) throw new Error('403 Forbidden');
        if (!res.ok) throw new Error(`HTTP ${res.status}`);

        const text = await res.text();
        const json = JSON.parse(text);

        if (!json?.success) throw new Error(json?.message || 'Kh√¥ng l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu');

        const stations = Array.isArray(json.stations)
          ? json.stations.map(r => ({
              label: r.stationName || r.Station_Name || 'Tr·∫°m',
              value: Number(r.swapRevenue || 0),
            }))
          : [];

        const packages = Array.isArray(json.packages)
          ? json.packages.map(r => ({
              label: r.packageName || r.Package_Name || 'G√≥i',
              value: Number(r.revenue || 0),
            }))
          : [];

        const totals = json.totals || null;

        setRevenueData({
          stations: stations.sort((a, b) => b.value - a.value),
          packages: packages.sort((a, b) => b.value - a.value),
          totals,
        });
      } catch (err) {
        setRevenueError(err.message || 'L·ªói kh√¥ng x√°c ƒë·ªãnh');
        setRevenueData({ stations: [], packages: [], totals: null });
      } finally {
        !aborted && setRevenueLoading(false);
      }
    })();

    return () => {
      aborted = true;
    };
  }, [activeTab]);

  return (
    <>
      <Header user={user} onLoginClick={onLoginClick} pageTitle="H·ªá th·ªëng qu·∫£n l√≠" />
      <div className="admin-dashboard-wrap">
        <div className="admin-dashboard-card">
          <h2 className="admin-dashboard-title">H·ªá th·ªëng qu·∫£n l√≠</h2>
          <div className="admin-dashboard-subtitle">T·ªïng quan h·ªá th·ªëng, b√°o c√°o v√† ph√¢n t√≠ch d·ªØ li·ªáu</div>

          {/* Summary cards */}
          <div className="admin-dashboard-summary">
            {summaryCards.map((c, i) => (
              <div key={i} className="admin-dashboard-summary-card">
                <div style={{ fontSize: 15, color: '#7c8c8f', marginBottom: 6 }}>{c.label}</div>
                <div style={{ fontSize: 26, fontWeight: 700, color: '#1976d2', marginBottom: 2 }}>{c.value}</div>
                <div style={{ fontSize: 13, color: '#10b981' }}>{c.sub}</div>
              </div>
            ))}
          </div>

          {/* Tabs */}
          <div className="admin-dashboard-tabs">
            {tabs.map(tab => (
              <button
                key={tab.value}
                onClick={() => setActiveTab(tab.value)}
                className={'admin-dashboard-tab-btn' + (activeTab === tab.value ? ' active' : '')}
              >
                {tab.label}
              </button>
            ))}
          </div>

          {/* Tab content */}
          <div>
            {activeTab === 'overview' && (
              <>
                {/* H√ÄNG 1: 2 bi·ªÉu ƒë·ªì c≈© (tr√°i: swap chart, ph·∫£i: gi·ªù cao ƒëi·ªÉm demo) */}
                <div style={{ display: 'flex', gap: 18, flexWrap: 'wrap' }}>
                  {/* Bi·ªÉu ƒë·ªì ƒë√£ g·∫Øn API */}
                  <div
                    style={{
                      flex: 2,
                      minWidth: 320,
                      background: '#fff',
                      borderRadius: 12,
                      padding: 18,
                      boxShadow: '0 1px 4px rgba(33,150,243,0.04)',
                    }}
                  >
                    <div style={{ fontWeight: 600, marginBottom: 4 }}>Doanh thu & L∆∞·ª£t ƒë·ªïi pin</div>
                    <div style={{ color: '#64748b', fontSize: 13, marginBottom: 10 }}>
                      T·ªïng l∆∞·ª£t ƒë·ªïi pin theo tr·∫°m (th√°ng hi·ªán t·∫°i)
                    </div>

                    {chartLoading && (
                      <div
                        style={{
                          height: 220,
                          display: 'flex',
                          alignItems: 'center',
                          justifyContent: 'center',
                          background: '#f7fafc',
                          borderRadius: 12,
                          color: '#94a3b8',
                        }}
                      >
                        ƒêang t·∫£i d·ªØ li·ªáu‚Ä¶
                      </div>
                    )}

                    {!chartLoading && chartError && (
                      <div
                        style={{
                          padding: 12,
                          borderRadius: 10,
                          background: '#fef2f2',
                          color: '#b91c1c',
                          fontSize: 14,
                        }}
                      >
                        {chartError}
                      </div>
                    )}

                    {!chartLoading && !chartError && chartData.length > 0 && (
                      <SimpleBarChart data={chartData} height={220} yLabel="L∆∞·ª£t ƒë·ªïi" />
                    )}

                    {!chartLoading && !chartError && chartData.length === 0 && (
                      <div
                        style={{
                          height: 220,
                          display: 'flex',
                          alignItems: 'center',
                          justifyContent: 'center',
                          background: '#f7fafc',
                          borderRadius: 12,
                          color: '#94a3b8',
                          fontSize: 14,
                        }}
                      >
                        Ch∆∞a c√≥ d·ªØ li·ªáu th·ªëng k√™.
                      </div>
                    )}
                  </div>

                  {/* Gi·ªù cao ƒëi·ªÉm (demo) */}
                  <div
                    style={{
                      flex: 1,
                      minWidth: 260,
                      background: '#fff',
                      borderRadius: 12,
                      padding: 18,
                      boxShadow: '0 1px 4px rgba(33,150,243,0.04)',
                    }}
                  >
                    <div style={{ fontWeight: 600, marginBottom: 8 }}>Gi·ªù cao ƒëi·ªÉm</div>
                    <div style={{ color: '#64748b', fontSize: 13, marginBottom: 8 }}>
                      Ph√¢n b·ªï l∆∞·ª£t ƒë·ªïi pin theo gi·ªù trong ng√†y
                    </div>
                    <div
                      style={{
                        height: 180,
                        background: '#f7fafc',
                        borderRadius: 12,
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        color: '#bdbdbd',
                        fontSize: 18,
                      }}
                    >
                      Bar Chart (Demo)
                    </div>
                  </div>
                </div>

                {/* H√ÄNG 2: BI·ªÇU ƒê·ªí DOANH THU M·ªöI - FULL WIDTH (b·∫±ng 2 bi·ªÉu ƒë·ªì tr√™n) */}
                <div
                  style={{
                    marginTop: 18,
                    width: '100%',
                    background: '#fff',
                    borderRadius: 12,
                    padding: 24,
                    boxShadow: '0 1px 4px rgba(33,150,243,0.08)',
                  }}
                >
                  <h3 style={{ fontWeight: 600, marginBottom: 6 }}>üìä Th·ªëng k√™ doanh thu th√°ng hi·ªán t·∫°i</h3>
                  <div style={{ color: '#64748b', marginBottom: 16 }}>
                    So s√°nh doanh thu ƒë·ªïi pin theo tr·∫°m v√† doanh thu thu√™ g√≥i pin
                  </div>

                  {revenueLoading && (
                    <div
                      style={{
                        height: 240,
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        background: '#f7fafc',
                        borderRadius: 12,
                      }}
                    >
                      ƒêang t·∫£i d·ªØ li·ªáu‚Ä¶
                    </div>
                  )}

                  {!revenueLoading && revenueError && (
                    <div
                      style={{
                        padding: 12,
                        borderRadius: 10,
                        background: '#fef2f2',
                        color: '#b91c1c',
                        fontSize: 14,
                      }}
                    >
                      {revenueError}
                    </div>
                  )}

                  {!revenueLoading && !revenueError && (
                    <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 32 }}>
                      <div>
                        <div style={{ fontWeight: 600, marginBottom: 10 }}>Doanh thu ƒë·ªïi pin theo tr·∫°m</div>
                        <SimpleBarChart data={revenueData.stations} height={240} yLabel="Doanh thu (‚Ç´)" />
                      </div>
                      <div>
                        <div style={{ fontWeight: 600, marginBottom: 10 }}>Doanh thu thu√™ g√≥i pin</div>
                        <SimpleBarChart data={revenueData.packages} height={240} yLabel="Doanh thu (‚Ç´)" />
                      </div>
                    </div>
                  )}

                  {revenueData.totals && (
                    <div style={{ marginTop: 20, fontSize: 15, color: '#334155' }}>
                      <b>T·ªïng doanh thu th√°ng:</b>{' '}
                      {Number(revenueData.totals.totalRevenue || 0).toLocaleString('vi-VN')} ‚Ç´
                      {'  ('}ƒê·ªïi pin:{' '}
                      {Number(revenueData.totals.swapRevenue || 0).toLocaleString('vi-VN')} ‚Ç´, Thu√™ g√≥i:{' '}
                      {Number(revenueData.totals.packageRevenue || 0).toLocaleString('vi-VN')} ‚Ç´{')'}
                    </div>
                  )}
                </div>

                {/* AI Suggestion Section (gi·ªØ nguy√™n) */}
                <div style={{ marginTop: 28, background: '#f7fafc', borderRadius: 12, padding: 18 }}>
                  <div style={{ fontWeight: 600, fontSize: 16, marginBottom: 10 }}>AI G·ª£i √Ω n√¢ng c·∫•p h·∫° t·∫ßng</div>
                  <div style={{ display: 'flex', gap: 18, flexWrap: 'wrap' }}>
                    <div
                      style={{
                        flex: 1,
                        minWidth: 260,
                        background: '#e6f2fd',
                        borderRadius: 10,
                        padding: 16,
                        marginBottom: 8,
                      }}
                    >
                      <div style={{ fontWeight: 600, color: '#1976d2', marginBottom: 6 }}>
                        Tr·∫°m Nguy·ªÖn Hu·ªá - M·ªü r·ªông khuy·∫øn ngh·ªã
                      </div>
                      <div style={{ color: '#444', fontSize: 15, marginBottom: 6 }}>
                        Nhu c·∫ßu tƒÉng 45% trong gi·ªù cao ƒëi·ªÉm. ƒê·ªÅ xu·∫•t tƒÉng th√™m 5 pin ƒë·ªÉ gi·∫£m th·ªùi gian ch·ªù.
                      </div>
                      <span
                        style={{
                          background: '#d1fae5',
                          color: '#059669',
                          borderRadius: 6,
                          padding: '2px 10px',
                          fontSize: 13,
                          fontWeight: 600,
                        }}
                      >
                        ∆Øu ti√™n cao
                      </span>
                    </div>
                    <div
                      style={{
                        flex: 1,
                        minWidth: 260,
                        background: '#fef9c3',
                        borderRadius: 10,
                        padding: 16,
                        marginBottom: 8,
                      }}
                    >
                      <div style={{ fontWeight: 600, color: '#b45309', marginBottom: 6 }}>Khu v·ª±c Q7 - M·ªü tr·∫°m m·ªõi</div>
                      <div style={{ color: '#444', fontSize: 15, marginBottom: 6 }}>
                        Ph√°t hi·ªán 300+ y√™u c·∫ßu t√¨m ki·∫øm t·ª´ khu v·ª±c Q7. ROI d·ª± ki·∫øn 18 th√°ng.
                      </div>
                      <span
                        style={{
                          background: '#fef08a',
                          color: '#b45309',
                          borderRadius: 6,
                          padding: '2px 10px',
                          fontSize: 13,
                          fontWeight: 600,
                        }}
                      >
                        ∆Øu ti√™n trung b√¨nh
                      </span>
                    </div>
                  </div>
                </div>
              </>
            )}

            {activeTab === 'station' && (
              <div style={{ display: 'flex', gap: 18, flexWrap: 'wrap' }}>
                <div
                  style={{
                    flex: 2,
                    minWidth: 320,
                    background: '#fff',
                    borderRadius: 12,
                    padding: 18,
                    boxShadow: '0 1px 4px rgba(33,150,243,0.04)',
                  }}
                >
                  <div style={{ fontWeight: 600, marginBottom: 8 }}>Qu·∫£n l√Ω tr·∫°m</div>
                  <ul style={{ color: '#444', fontSize: 15, marginBottom: 10, paddingLeft: 18 }}>
                    <li>Theo d√µi l·ªãch s·ª≠ s·ª≠ d·ª•ng & tr·∫°ng th√°i s·ª©c kh·ªèe (SoH ‚Äì State of Health)</li>
                    <li>ƒêi·ªÅu ph·ªëi pin gi·ªØa c√°c tr·∫°m</li>
                    <li>X·ª≠ l√Ω khi·∫øu n·∫°i & ƒë·ªïi pin l·ªói</li>
                  </ul>
                  <div style={{ color: '#bdbdbd', fontSize: 15 }}>T√≠nh nƒÉng ƒëang ph√°t tri·ªÉn...</div>
                </div>
              </div>
            )}

            {activeTab === 'user' && (
              <div style={{ display: 'flex', gap: 18, flexWrap: 'wrap' }}>
                <div
                  style={{
                    flex: 2,
                    minWidth: 320,
                    background: '#fff',
                    borderRadius: 12,
                    padding: 18,
                    boxShadow: '0 1px 4px rgba(33,150,243,0.04)',
                  }}
                >
                  <div style={{ fontWeight: 600, marginBottom: 8 }}>Qu·∫£n l√Ω ng∆∞·ªùi d√πng & g√≥i thu√™</div>
                  <ul style={{ color: '#444', fontSize: 15, marginBottom: 10, paddingLeft: 18 }}>
                    <li>Qu·∫£n l√Ω kh√°ch h√†ng</li>
                    <li>T·∫°o g√≥i thu√™ pin</li>
                    <li>Ph√¢n quy·ªÅn nh√¢n vi√™n tr·∫°m ƒë·ªïi pin</li>
                  </ul>
                  <div style={{ color: '#bdbdbd', fontSize: 15 }}>T√≠nh nƒÉng ƒëang ph√°t tri·ªÉn...</div>
                </div>
              </div>
            )}

            {activeTab === 'analytics' && (
              <div style={{ display: 'flex', gap: 18, flexWrap: 'wrap' }}>
                <div
                  style={{
                    flex: 2,
                    minWidth: 320,
                    background: '#fff',
                    borderRadius: 12,
                    padding: 18,
                    boxShadow: '0 1px 4px rgba(33,150,243,0.04)',
                  }}
                >
                  <div style={{ fontWeight: 600, marginBottom: 8 }}>B√°o c√°o & th·ªëng k√™</div>
                  <ul style={{ color: '#444', fontSize: 15, marginBottom: 10, paddingLeft: 18 }}>
                    <li>Doanh thu, s·ªë l∆∞·ª£t ƒë·ªïi pin</li>
                    <li>B√°o c√°o t·∫ßn su·∫•t ƒë·ªïi pin, gi·ªù cao ƒëi·ªÉm</li>
                    <li>AI g·ª£i √Ω d·ª± b√°o nhu c·∫ßu s·ª≠ d·ª•ng tr·∫°m ƒë·ªïi pin ƒë·ªÉ n√¢ng c·∫•p h·∫° t·∫ßng</li>
                  </ul>
                  <div style={{ color: '#bdbdbd', fontSize: 15 }}>T√≠nh nƒÉng ƒëang ph√°t tri·ªÉn...</div>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </>
  );
}
